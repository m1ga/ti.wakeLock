/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Titanium SDK
 * Copyright TiDev, Inc. 04/07/2022-Present
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 */
package ti.wakeLock;

import android.Manifest;
import android.content.pm.PackageManager;
import android.os.PowerManager;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.util.TiConvert;


@Kroll.module(name = "TiWakeLock", id = "ti.wakeLock")
public class TiWakeLockModule extends KrollModule {

    @Kroll.constant
    public static final int FULL_WAKE_LOCK = PowerManager.FULL_WAKE_LOCK;
    @Kroll.constant
    public static final int PARTIAL_WAKE_LOCK = PowerManager.PARTIAL_WAKE_LOCK;
    @Kroll.constant
    public static final int SCREEN_DIM_WAKE_LOCK = PowerManager.SCREEN_DIM_WAKE_LOCK;
    @Kroll.constant
    public static final int SCREEN_BRIGHT_WAKE_LOCK = PowerManager.SCREEN_BRIGHT_WAKE_LOCK;

    private static final String LCAT = "TiWakeLockModule";
    private PowerManager.WakeLock wl;

    public TiWakeLockModule() {
        super();
    }

    @Kroll.onAppCreate
    public static void onAppCreate(TiApplication app) {
    }

    // Methods
    @Kroll.method
    public void create(KrollDict options) {
        TiApplication app = TiApplication.getInstance();
        int duration = TiConvert.toInt(options.getInt("duration"), 0);
        if (app.checkCallingOrSelfPermission(Manifest.permission.WAKE_LOCK) == PackageManager.PERMISSION_GRANTED) {
            PowerManager pm = (PowerManager) app.getSystemService(TiApplication.POWER_SERVICE);
            int wakeFlags = TiConvert.toInt(options.getInt("flags"), PowerManager.FULL_WAKE_LOCK | PowerManager.ACQUIRE_CAUSES_WAKEUP | PowerManager.ON_AFTER_RELEASE);

            try {
                wl = pm.newWakeLock(wakeFlags, app.getPackageName());
                if (duration != 0) {
                    wl.acquire(duration);
                } else {
                    wl.acquire();
                }
            } catch (Exception e) {
                Log.e(LCAT, e.getMessage());
            }
        }
    }

    @Kroll.method
    public void release() {
        if (wl != null) {
            wl.release();
        }
    }

}

